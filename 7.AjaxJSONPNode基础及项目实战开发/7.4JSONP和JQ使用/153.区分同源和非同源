JSONP和AJAX相同，都是客户端向服务器端发送请求：给服务器端传递内容 或者 从服务器端获取数据 的方式

Ajax属性同源策略
JSONP属于非同源策略(跨域请求) ->实现跨域请求的方式有N多种，只不过JSONP是最常用的

区分同源和非同源
用当前页面的地址 && 数据请求的接口址地
1)协议
2)域名或者IP
3)端口号
以上三部分完全相同属于同源策略，我们使用AJAX技术获取数据，只要有一个不一样的，就属于非同源，我们一般使用JSONP获取数据

当前页面的URL地址(web在预览页面的时候会默认的创建一个本地虚拟的服务,端口号是63342)
http://localhost:63342/零七八碎小特效/珠峰2016视频学习/7.AjaxJSONPNode基础及项目实战开发/7.4JSONP和JQ使用/153-1.html

->我们需要在153-1.HTML中做一件事情
[把本地的data.txt中的内容获取到]
我们需要请求数据的地址 ：http://localhost:63342/零七八碎小特效/珠峰2016视频学习/7.AjaxJSONPNode基础及项目实战开发/7.4JSONP和JQ使用/data.txt


[我想获取的是腾讯体育项目中的数据]
我们需要请求数据的地址 http://matchweb.sports.qq.com/kbs/calendar?columnId=100000



JSONP的原理(JSONP请求一定需要对方的服务器做支持才可以):
->在script的世界中，没有同源跨域这一说，只要你给我src属性中的地址是一个合法的地址，script都可以把对应的内容请求回来

->jsonp就是利用了script的这个原理
    1)我们首先把需要请求数据的，那个跨域的API数据接口的地址赋值给script的src
    2)把当前页面中的某一个函数名当做参数值，传递给腾讯服务器(URL问号传参:?callback=fn)
    3)腾讯服务器接收到你的请求后，需要进行特殊的处理：把你传递进来的函数名和它需要给你的数据拼接成一个的字符串 例如：我们传递进去的函数名是fn,它准备好的数据是 'fn([{"name":"dingning"}])' ->'我传递的函数名(需要给我们的数据)'
    4)最后腾讯的服务器把准备的数据通过HTTP协议返回给我们客户端，客户端发现其实就是让我们的fn执行，而且还给fn传递了一堆的数据，那些数据就是我们想要的


百度搜索的接口
http://suggestion.baidu.com/su?wd=文本框中的关键字&cb=xxx;(cb里的内容是设置的函数名+随机数)
http://suggestion.baidu.com/su?wd=丁宁&_=1474526506312&cb=fn  ->搜索丁宁两个字母后的搜索结果

//->以下的搜索的结果
fn({q:"丁宁",p:false,s:["丁宁张继科","丁宁李晓霞不握手事件","丁宁11分钟视频","丁宁刘诗雯","丁宁微博","丁宁决战李晓霞","丁宁vs李晓霞","丁宁 李晓霞","丁宁发球","丁宁vs金宋依"]});

